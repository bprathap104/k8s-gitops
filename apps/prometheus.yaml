apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 55.5.0
    helm:
      releaseName: kube-prometheus-stack
      values: |
        # Kube Prometheus Stack Configuration
        commonLabels: {}

        # Prometheus Operator
        prometheusOperator:
          enabled: true
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi

        # Prometheus
        prometheus:
          enabled: true
          prometheusSpec:
            replicas: 2
            retention: 30d
            resources:
              requests:
                cpu: 200m
                memory: 400Mi
              limits:
                cpu: 1000m
                memory: 2Gi
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: ""  # Use default storage class
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 50Gi

        # Alertmanager
        alertmanager:
          enabled: true
          alertmanagerSpec:
            replicas: 2
            resources:
              requests:
                cpu: 10m
                memory: 32Mi
              limits:
                cpu: 100m
                memory: 128Mi

        # Grafana
        grafana:
          enabled: true
          replicas: 1
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
          
          # Admin credentials (use secret in production)
          adminPassword: admin123  # Change this!
          
          # Persistent storage
          persistence:
            enabled: true
            size: 10Gi

        # Node Exporter
        nodeExporter:
          enabled: true

        # Kube State Metrics
        kubeStateMetrics:
          enabled: true

        # CoreDNS monitoring
        coreDns:
          enabled: true

        # Kubelet monitoring
        kubelet:
          enabled: true

        # API Server monitoring
        kubeApiServer:
          enabled: true

        # Controller Manager monitoring
        kubeControllerManager:
          enabled: true

        # ETCD monitoring
        kubeEtcd:
          enabled: true

        # Scheduler monitoring
        kubeScheduler:
          enabled: true
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  ignoreDifferences:
    - group: admissionregistration.k8s.io
      kind: MutatingWebhookConfiguration
      jqPathExpressions:
        - .webhooks[]?.clientConfig.caBundle
    - group: admissionregistration.k8s.io
      kind: ValidatingWebhookConfiguration
      jqPathExpressions:
        - .webhooks[]?.clientConfig.caBundle

